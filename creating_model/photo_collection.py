import cv2
import time
import os

url = 'your url here.'
IMAGES_PATH = r"your image path here"

def countdown(seconds):
    '''
    :param seconds: Number of seconds to wait 
    :return: No return. Prints out a countdown timer.
    '''
    while seconds > 0:
        print("Time: " + str(seconds) + "(s)")
        seconds = seconds - 1

        time.sleep(1)

        if seconds <= 0:
            break

def get_continuous_photos(url, IMAGES_PATH, image_class):
    '''
    :param url: A string that represents a URL that connects to your phone. The URL is generated by the DroidCam app.
    :param IMAGES_PATH: A string that represents the path to where you want to store the photos taken
    :param image_class: A string that acts as an identifier between different image classes
    :return: No return. Takes video feed from your phone camera and saves the individual frames from that feed as photos
    on your computer
    '''

    cap = cv2.VideoCapture(url)  # Getting feed from your phone camera
    num_photo = 0
    prev_time = 0
    seconds_between_photos = 3  # Number of seconds to wait between taking photos

    print("Preparing to start taking photos")
    countdown(5)  # Countdown to give user time to get in position for taking photos

    while (cap.isOpened()):

        ret, frame = cap.read()
        cv2.imshow("Photo Collection", cv2.rotate(frame, cv2.ROTATE_90_CLOCKWISE))  # Displaying video feed

        key = cv2.waitKey(1)

        if key == ord('q'):  # if the q key is hit then the window will disappear and the program stops
            break

        # if the p key is hit then the camera feed and photo collection will pause until some other key is hit
        if key == ord('p'):
            print("Paused")
            cv2.waitKey(-1)

        time_elapsed = time.time() - prev_time

        if time_elapsed > seconds_between_photos:  # Checking to see how much time has passed
            prev_time = time.time()

            imgname = os.path.join(IMAGES_PATH, image_class + str(num_photo + 1) + '.jpg')  # Saving photo
            print("Photo taken: " + imgname)
            cv2.imwrite(imgname, frame)
            num_photo += 1

    print(str(num_photo) + " images captured!")
    cap.release()
    cv2.destroyAllWindows()

get_continuous_photos(url, IMAGES_PATH, "your_class_name_here")
